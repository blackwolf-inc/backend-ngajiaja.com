const { check, body } = require('express-validator');

const createTeacherValidator = [
  check('user_id')
    .exists()
    .withMessage('Must have user_id')
    .bail()
    .notEmpty()
    .withMessage('Can not be empty')
    .bail()
    .isNumeric()
    .withMessage('Must be integer'),
  check('pendidikan_terakhir')
    .exists()
    .withMessage('Must have pendidikan_terakhir')
    .bail()
    .notEmpty()
    .withMessage('Can not be empty')
    .bail()
    .isString()
    .withMessage('Must be string'),
  check('punya_sertifikasi_guru_quran')
    .exists()
    .withMessage('Must have punya_sertifikasi_guru_quran')
    .bail()
    .notEmpty()
    .withMessage('Can not be empty')
    .bail()
    .isNumeric()
    .withMessage('Must be integer')
    .bail()
    .isIn([0, 1])
    .withMessage('punya_sertifikasi_guru_quran must be 0 / 1'),
  check('pengalaman_mengajar')
    .exists()
    .withMessage('Must have pengalaman_mengajar')
    .bail()
    .notEmpty()
    .withMessage('Can not be empty')
    .bail()
    .isIn(['BELUM PERNAH', '< 6 BULAN', '> 6 BULAN'])
    .withMessage('pengalaman_mengajar must be: BELUM PERNAH / < 6 BULAN / > 6 BULAN'),
  check('pernah_mengajar_online')
    .exists()
    .withMessage('Must have pernah_mengajar_online')
    .bail()
    .notEmpty()
    .withMessage('Can not be empty')
    .bail()
    .isNumeric()
    .withMessage('Must be integer')
    .bail()
    .isIn([0, 1])
    .withMessage('pernah_mengajar_online must be 0 / 1'),
  check('paham_aplikasi_meet')
    .exists()
    .withMessage('Must have paham_aplikasi_meet')
    .bail()
    .notEmpty()
    .withMessage('Can not be empty')
    .bail()
    .isNumeric()
    .withMessage('Must be in integer')
    .bail()
    .isIn([0, 1])
    .withMessage('paham_aplikasi_meet must be 0 / 1'),
  check('siap_komitmen')
    .exists()
    .withMessage('Must have siap_komitmen')
    .bail()
    .notEmpty()
    .withMessage('Can not be empty')
    .bail()
    .isNumeric()
    .withMessage('Must be in integer')
    .bail()
    .isIn([0, 1])
    .withMessage('siap_komitmen must be 0 / 1'),
  check('mengajar_hari_libur')
    .exists()
    .withMessage('Must have mengajar_hari_libur')
    .bail()
    .notEmpty()
    .withMessage('Can not be empty')
    .bail()
    .isNumeric()
    .withMessage('Must be in integer')
    .bail()
    .isIn([0, 1])
    .withMessage('mengajar_hari_libur must be 0 / 1'),
  check('bagi_hasil_50persen')
    .exists()
    .withMessage('Must have bagi_hasil_50persen')
    .bail()
    .notEmpty()
    .withMessage('Can not be empty')
    .bail()
    .isNumeric()
    .withMessage('Must be in integer')
    .bail()
    .isIn([0, 1])
    .withMessage('bagi_hasil_50persen must be 0 / 1'),
];

const updateTeacherValidator = [
  check('user_id')
    .if(body('user_id').exists())
    .notEmpty()
    .withMessage('Must have user_id')
    .bail()
    .notEmpty()
    .withMessage('Can not be empty')
    .bail()
    .isNumeric()
    .withMessage('Must be integer'),
  check('level')
    .if(body('level').exists())
    .notEmpty()
    .withMessage('Must have level')
    .bail()
    .notEmpty()
    .withMessage('Can not be empty')
    .bail()
    .isString()
    .withMessage('Must be string')
    .bail()
    .isIn(['MUBTADI', 'YUKHTABAR', 'BARIE'])
    .withMessage('level must be: MUBTADI / YUKHTABAR / BARIE'),
  check('pendidikan_terakhir')
    .if(body('pendidikan_terakhir').exists())
    .notEmpty()
    .withMessage('Must have pendidikan_terakhir')
    .bail()
    .notEmpty()
    .withMessage('Can not be empty')
    .bail()
    .isString()
    .withMessage('Must be string'),
  check('punya_sertifikasi_guru_quran')
    .if(body('punya_sertifikasi_guru_quran').exists())
    .notEmpty()
    .withMessage('Must have punya_sertifikasi_guru_quran')
    .bail()
    .notEmpty()
    .withMessage('Can not be empty')
    .bail()
    .isNumeric()
    .withMessage('Must be integer')
    .bail()
    .isIn([0, 1])
    .withMessage('punya_sertifikasi_guru_quran must be 0 / 1'),
  check('pengalaman_mengajar')
    .if(body('pengalaman_mengajar').exists())
    .notEmpty()
    .withMessage('Must have pengalaman_mengajar')
    .bail()
    .notEmpty()
    .withMessage('Can not be empty')
    .bail()
    .isIn(['BELUM PERNAH', '< 6 BULAN', '> 6 BULAN'])
    .withMessage('pengalaman_mengajar must be: BELUM PERNAH / < 6 BULAN / > 6 BULAN'),
  check('pernah_mengajar_online')
    .if(body('pernah_mengajar_online').exists())
    .notEmpty()
    .withMessage('Must have pernah_mengajar_online')
    .bail()
    .notEmpty()
    .withMessage('Can not be empty')
    .bail()
    .isNumeric()
    .withMessage('Must be integer')
    .bail()
    .isIn([0, 1])
    .withMessage('pernah_mengajar_online must be 0 / 1'),
  check('paham_aplikasi_meet')
    .if(body('paham_aplikasi_meet').exists())
    .notEmpty()
    .withMessage('Must have paham_aplikasi_meet')
    .bail()
    .notEmpty()
    .withMessage('Can not be empty')
    .bail()
    .isNumeric()
    .withMessage('Must be in integer')
    .bail()
    .isIn([0, 1])
    .withMessage('paham_aplikasi_meet must be 0 / 1'),
  check('siap_komitmen')
    .if(body('siap_komitmen').exists())
    .notEmpty()
    .withMessage('Must have siap_komitmen')
    .bail()
    .notEmpty()
    .withMessage('Can not be empty')
    .bail()
    .isNumeric()
    .withMessage('Must be in integer')
    .bail()
    .isIn([0, 1])
    .withMessage('siap_komitmen must be 0 / 1'),
  check('mengajar_hari_libur')
    .if(body('mengajar_hari_libur').exists())
    .notEmpty()
    .withMessage('Must have mengajar_hari_libur')
    .bail()
    .notEmpty()
    .withMessage('Can not be empty')
    .bail()
    .isNumeric()
    .withMessage('Must be in integer')
    .bail()
    .isIn([0, 1])
    .withMessage('mengajar_hari_libur must be 0 / 1'),
  check('bagi_hasil_50persen')
    .if(body('bagi_hasil_50persen').exists())
    .notEmpty()
    .withMessage('Must have bagi_hasil_50persen')
    .bail()
    .notEmpty()
    .withMessage('Can not be empty')
    .bail()
    .isNumeric()
    .withMessage('Must be in integer')
    .bail()
    .isIn([0, 1])
    .withMessage('bagi_hasil_50persen must be 0 / 1'),
  check('isVerifiedByAdmin')
    .if(body('isVerifiedByAdmin').exists())
    .notEmpty()
    .withMessage('Must have isVerifiedByAdmin')
    .bail()
    .notEmpty()
    .withMessage('Can not be empty')
    .bail()
    .isNumeric()
    .withMessage('Must be in integer')
    .bail()
    .isIn([0, 1])
    .withMessage('isVerifiedByAdmin must be 0 / 1'),
  check('link_video_membaca_quran')
    .if(body('link_video_membaca_quran').exists())
    .notEmpty()
    .withMessage('Must have link_video_membaca_quran')
    .bail()
    .notEmpty()
    .withMessage('Can not be empty')
    .bail()
    .isString()
    .withMessage('Must be string'),
  check('link_video_simulasi_mengajar')
    .if(body('link_video_simulasi_mengajar').exists())
    .notEmpty()
    .withMessage('Must have link_video_simulasi_mengajar')
    .bail()
    .notEmpty()
    .withMessage('Can not be empty')
    .bail()
    .isString()
    .withMessage('Must be string'),
  check('tanggal_wawancara')
    .if(body('tanggal_wawancara').exists())
    .notEmpty()
    .withMessage('Must have tanggal_wawancara')
    .bail()
    .notEmpty()
    .withMessage('Can not be empty')
    .bail()
    .isString()
    .withMessage('Must be string'),
  check('jam_wawancara')
    .if(body('jam_wawancara').exists())
    .notEmpty()
    .withMessage('Must have jam_wawancara')
    .bail()
    .notEmpty()
    .withMessage('Can not be empty')
    .bail()
    .isString()
    .withMessage('Must be string'),
  check('link_wawancara')
    .if(body('link_wawancara').exists())
    .notEmpty()
    .withMessage('Must have link_wawancara')
    .bail()
    .notEmpty()
    .withMessage('Can not be empty')
    .bail()
    .isString()
    .withMessage('Must be string'),
];

module.exports = {
  createTeacherValidator,
  updateTeacherValidator,
};
