const { check, body } = require('express-validator');

const createStudentValidator = [
  check('user_id')
    .exists()
    .withMessage('Must have user_id')
    .bail()
    .notEmpty()
    .withMessage('Can not be empty')
    .bail()
    .isNumeric()
    .withMessage('Must be integer'),
  check('profesi')
    .exists()
    .withMessage('Must have profesi')
    .bail()
    .notEmpty()
    .withMessage('Can not be empty')
    .bail()
    .isString()
    .withMessage('Must be string'),
  check('level')
    .exists()
    .withMessage('Must have level')
    .bail()
    .notEmpty()
    .withMessage('Can not be empty')
    .bail()
    .isString()
    .withMessage('Must be string')
    .bail()
    .isIn(['BEGINNER, ELEMENTARY, INTERMEDIATE, ADVANCE'])
    .withMessage('level must be BEGINNER / ELEMENTARY / INTERMEDIATE / ADVANCE'),
  check('menguasai_ilmu_tajwid')
    .exists()
    .withMessage('Must have menguasai_ilmu_tajwid')
    .bail()
    .notEmpty()
    .withMessage('Can not be empty')
    .bail()
    .isIn([0, 1])
    .withMessage('menguasai_ilmu_tajwid must be 0 / 1'),
  check('paham_aplikasi_meet')
    .exists()
    .withMessage('Must have paham_aplikasi_meet')
    .bail()
    .notEmpty()
    .withMessage('Can not be empty')
    .bail()
    .isNumeric()
    .withMessage('Must be in integer')
    .bail()
    .isIn([0, 1])
    .withMessage('paham_aplikasi_meet must be 0 / 1'),
  check('siap_komitmen_mengaji')
    .exists()
    .withMessage('Must have siap_komitmen_mengaji')
    .bail()
    .notEmpty()
    .withMessage('Can not be empty')
    .bail()
    .isNumeric()
    .withMessage('Must be in integer')
    .bail()
    .isIn([0, 1])
    .withMessage('siap_komitmen_mengaji must be 0 / 1'),
  check('siap_komitmen_infak')
    .exists()
    .withMessage('Must have siap_komitmen_infak')
    .bail()
    .notEmpty()
    .withMessage('Can not be empty')
    .bail()
    .isNumeric()
    .withMessage('Must be in integer')
    .bail()
    .isIn([0, 1])
    .withMessage('siap_komitmen_infak must be 0 / 1'),
  check('bersedia_bayar_20K')
    .exists()
    .withMessage('Must have bersedia_bayar_20K')
    .bail()
    .notEmpty()
    .withMessage('Can not be empty')
    .bail()
    .isNumeric()
    .withMessage('Must be in integer')
    .bail()
    .isIn([0, 1])
    .withMessage('bersedia_bayar_20K must be 0 / 1'),
];

const updateStudentValidator = [
  check('user_id')
    .if(body('user_id').exists())
    .notEmpty()
    .withMessage('Can not be empty')
    .bail()
    .isNumeric()
    .withMessage('Must be integer'),
  check('profesi')
    .if(body('profesi').exists())
    .notEmpty()
    .withMessage('Can not be empty')
    .bail()
    .isString()
    .withMessage('Must be string'),
  check('level')
    .if(body('level').exists())
    .notEmpty()
    .withMessage('Can not be empty')
    .bail()
    .isString()
    .withMessage('Must be string')
    .bail()
    .isIn(['BEGINNER, ELEMENTARY, INTERMEDIATE, ADVANCE'])
    .withMessage(`level must be BEGINNER / ELEMENTARY / INTERMEDIATE / ADVANCE`),
  check('menguasai_ilmu_tajwid')
    .if(body('menguasai_ilmu_tajwid').exists())
    .notEmpty()
    .withMessage('Can not be empty')
    .bail()
    .isNumeric()
    .withMessage('Must be in integer')
    .bail()
    .isIn([0, 1])
    .withMessage('menguasai_ilmu_tajwid must be 0 / 1'),
  check('paham_aplikasi_meet')
    .if(body('paham_aplikasi_meet').exists())
    .notEmpty()
    .withMessage('Can not be empty')
    .bail()
    .isNumeric()
    .withMessage('Must be in integer')
    .bail()
    .isIn([0, 1])
    .withMessage('paham_aplikasi_meet must be 0 / 1'),
  check('siap_komitmen_mengaji')
    .if(body('siap_komitmen_mengaji').exists())
    .notEmpty()
    .withMessage('Can not be empty')
    .bail()
    .isNumeric()
    .withMessage('Must be in integer')
    .bail()
    .isIn([0, 1])
    .withMessage('siap_komitmen_mengaji must be 0 / 1'),
  check('siap_komitmen_infak')
    .if(body('siap_komitmen_infak').exists())
    .notEmpty()
    .withMessage('Can not be empty')
    .bail()
    .isNumeric()
    .withMessage('Must be in integer')
    .bail()
    .isIn([0, 1])
    .withMessage('siap_komitmen_infak must be 0 / 1'),
  check('bersedia_bayar_20K')
    .if(body('bersedia_bayar_20K').exists())
    .notEmpty()
    .withMessage('Can not be empty')
    .bail()
    .isNumeric()
    .withMessage('Must be in integer')
    .bail()
    .isIn([0, 1])
    .withMessage('bersedia_bayar_20K must be 0 / 1'),
];

const createJadwalValidator = [
  check('peserta_id')
    .exists()
    .withMessage('Must have peserta_id')
    .bail()
    .isNumeric()
    .withMessage('Must be an integer'),
  check('hari_bimbingan_1')
    .exists()
    .withMessage('Must have hari_bimbingan_1')
    .bail()
    .isString()
    .withMessage('Must be a string')
    .bail()
    .isIn(['SENIN', 'SELASA', 'RABU', 'KAMIS', 'JUMAT', 'SABTU', 'MINGGU'])
    .withMessage(
      'hari_bimbingan_1 must be one of: SENIN, SELASA, RABU, KAMIS, JUMAT, SABTU, MINGGU'
    ),
  check('jam_bimbingan_1')
    .exists()
    .withMessage('Must have jam_bimbingan_1')
    .bail()
    .isString()
    .withMessage('Must be a string')
    .bail()
    .matches(/^([01]?[0-9]|2[0-3]):[0-5][0-9] - ([01]?[0-9]|2[0-3]):[0-5][0-9]$/)
    .withMessage('jam_bimbingan_1 must be in the format HH:mm - HH:mm'),
  check('hari_bimbingan_2')
    .optional()
    .isString()
    .withMessage('Must be a string')
    .isIn(['SENIN', 'SELASA', 'RABU', 'KAMIS', 'JUMAT', 'SABTU', 'MINGGU'])
    .withMessage(
      'hari_bimbingan_2 must be one of: SENIN, SELASA, RABU, KAMIS, JUMAT, SABTU, MINGGU'
    ),
  check('jam_bimbingan_2')
    .optional()
    .isString()
    .withMessage('Must be a string')
    .matches(/^([01]?[0-9]|2[0-3]):[0-5][0-9] - ([01]?[0-9]|2[0-3]):[0-5][0-9]$/)
    .withMessage('jam_bimbingan_2 must be in the format HH:mm - HH:mm'),
];

module.exports = {
  createStudentValidator,
  updateStudentValidator,
  createJadwalValidator,
};
